"""Primera version

Revision ID: d6fa061fbcf1
Revises: 
Create Date: 2025-02-01 17:15:12.238504

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes

# revision identifiers, used by Alembic.
revision: str = 'd6fa061fbcf1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('name', sa.Enum('ADMIN', 'EDITOR', 'USER', name='roletype'), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password', sa.LargeBinary(), nullable=True),
    sa.Column('firstName', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('lastName', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('creationDate', sa.DateTime(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False, comment='Indica si el usuario puede acceder o no.'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('readed', sa.Boolean(), nullable=False),
    sa.Column('timePosted', sa.DateTime(), nullable=True),
    sa.Column('userID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['userID'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('problems',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('block', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('difficulty', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('expectedOutput', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('authorID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['authorID'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_roles',
    sa.Column('userID', sa.Integer(), nullable=False),
    sa.Column('roleName', sa.Enum('ADMIN', 'EDITOR', 'USER', name='roletype'), nullable=False),
    sa.ForeignKeyConstraint(['roleName'], ['roles.name'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['userID'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('userID', 'roleName')
    )
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('timePosted', sa.DateTime(), nullable=True),
    sa.Column('problemID', sa.Integer(), nullable=False),
    sa.Column('userID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['problemID'], ['problems.id'], ),
    sa.ForeignKeyConstraint(['userID'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('timePosted', sa.DateTime(), nullable=True),
    sa.Column('readed', sa.Boolean(), nullable=False),
    sa.Column('problemID', sa.Integer(), nullable=False),
    sa.Column('userID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['problemID'], ['problems.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['userID'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subbmissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('language', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('timeSubmitted', sa.DateTime(), nullable=True),
    sa.Column('timeUpdated', sa.DateTime(), nullable=True),
    sa.Column('suggestions', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('problemID', sa.Integer(), nullable=False),
    sa.Column('userID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['problemID'], ['problems.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['userID'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_cases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('problemID', sa.Integer(), nullable=False),
    sa.Column('input', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('output', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['problemID'], ['problems.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('test_cases')
    op.drop_table('subbmissions')
    op.drop_table('reports')
    op.drop_table('comments')
    op.drop_table('user_roles')
    op.drop_table('problems')
    op.drop_table('notifications')
    op.drop_table('users')
    op.drop_table('roles')
    # ### end Alembic commands ###
